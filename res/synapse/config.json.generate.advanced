#!/sbin/busybox sh

cat << CTAG
{
    name:ADVANCED,
    elements:[
      	{ SPane:{
		title:"Low Memory Killer",
      	}},
	{ SDescription:{
		description:" LMK Minfree controls how much memory each app type can hold, and is responsible for memory management for multitasking; all values are multiplied by 256 pages."
	}},
	{ SDescription:{
		description:" Defaults are: 48 - 60 - 72 - 84 - 96 - 120 MB"
	}},
	{ SDescription:{
		description:""
	}},
`
	for LMK in 1 2 3 4 5 6; do
		echo '{ SSeekBar:{ '
			case $LMK in
			1)
				echo 'title:"Foreground App"' ;;
			2)
				echo 'title:"Visible App"' ;;
			3)
				echo 'title:"Secondary Server"' ;;
			4)
				echo 'title:"Hidden App"' ;;
			5)
				echo 'title:"Content Provider"' ;;
			6)
				echo 'title:"Empty App"' ;;
			esac
			echo ', action:"minfree '${LMK}'",
			min:10, max:200 }},'
	done
`
      	{ SDescription:{
		description:""
      	}},
      	{ SPane:{
		title:"Kernel Entropy"
      	}},
	{ SDescription:{
		description:""
	}},
	{ SLiveLabel:{
		title:"Entropy Available",
		refresh:1000,
		action:"live entropy"
	}},
	{ SSeekBar:{
		title:"Read Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/read_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/read_wakeup_threshold"
	}},
	{ SSeekBar:{
		title:"Write Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/write_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/write_wakeup_threshold"
	}},
      	{ SDescription:{
		description:""
	}},
	{ SPane:{
		title:"randomize_va_space",
		description:" Disabling (0) virtual address randomisation may improve GUI responsiveness. Default is 0."
	}},
      	{ SDescription:{
		description:""
	}},
	{ SSeekBar:{
		title:"randomize_va_space",
		max:2,
		min:0,
		step:1,
		default:`cat /proc/sys/kernel/randomize_va_space`,
		action:"generic /proc/sys/kernel/randomize_va_space"
	}},
	{ SDescription:{
		description:" "
	}},
    ]
}
CTAG
